<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties PUBLIC "-//JTRS//DTD SCA V2.2.2 PRF//EN" "properties.dtd">
<properties>
  <simple id="DCE:cdc5ee18-7ceb-4ae6-bf4c-31f983179b4d" mode="readonly" name="device_kind" type="string">
    <description>This specifies the device kind</description>
    <value>FRONTEND::TUNER</value>
    <kind kindtype="allocation"/>
    <action type="eq"/>
  </simple>
  <simple id="DCE:0f99b2e4-9903-4631-9846-ff349d18ecfb" mode="readonly" name="device_model" type="string">
    <description> This specifies the specific device</description>
    <value>USRP_UHD_RFNoC</value>
    <kind kindtype="allocation"/>
    <action type="eq"/>
  </simple>
  <simple id="DCE:9B445600-6C7F-11d4-A226-0050DA314CD6" mode="readonly" name="processor_name" type="string">
    <description>SCA required property describing the CPU type</description>
    <value>RF-NoC</value>
    <kind kindtype="allocation"/>
    <action type="eq"/>
  </simple>
  <simple id="DCE:80BF17F0-6C7F-11d4-A226-0050DA314CD6" mode="readonly" name="os_name" type="string">
    <description>SCA required property describing the Operating System Name</description>
    <value>Linux</value>
    <kind kindtype="allocation"/>
    <action type="eq"/>
  </simple>
  <simple id="DCE:0f3a9a37-a342-43d8-9b7f-78dc6da74192" mode="readonly" name="os_version" type="string">
    <description>SCA required property describing the Operating System Version</description>
    <value>3.14.2-xilinx</value>
    <kind kindtype="allocation"/>
    <action type="eq"/>
  </simple>
  <structsequence id="hw_load_requests" mode="readwrite">
    <struct id="hw_load_request_struct">
      <simple id="hardware_id" type="string"/>
      <simple id="load_filepath" type="string"/>
      <simple id="request_id" type="string"/>
      <simple id="requester_id" type="string"/>
    </struct>
    <configurationkind kindtype="allocation"/>
  </structsequence>
  <structsequence id="hw_load_statuses" mode="readwrite">
    <struct id="hw_load_statuses_struct">
      <simple id="hw_load_statuses::hardware_id" name="hardware_id" type="string"/>
      <simple id="hw_load_statuses::load_filepath" name="load_filepath" type="string"/>
      <simple id="hw_load_statuses::request_id" name="request_id" type="string"/>
      <simple id="hw_load_statuses::requester_id" name="requester_id" type="string"/>
      <simple id="hw_load_statuses::state" name="state" type="ushort">
        <enumerations>
          <enumeration label="INACTIVE" value="0"/>
          <enumeration label="ACTIVE" value="1"/>
          <enumeration label="PENDING" value="2"/>
          <enumeration label="ERRORED" value="3"/>
        </enumerations>
      </simple>
    </struct>
    <configurationkind kindtype="property"/>
  </structsequence>
  <struct id="FRONTEND::listener_allocation" name="frontend_listener_allocation">
    <description>Allocates a listener (subscriber) based off a previous allocation </description>
    <simple id="FRONTEND::listener_allocation::existing_allocation_id" name="existing_allocation_id" type="string">
      <description></description>
    </simple>
    <simple id="FRONTEND::listener_allocation::listener_allocation_id" name="listener_allocation_id" type="string">
      <description></description>
    </simple>
    <configurationkind kindtype="allocation"/>
  </struct>
  <struct id="FRONTEND::tuner_allocation" name="frontend_tuner_allocation">
    <description>Frontend Interfaces v2.0 main allocation structure</description>
    <simple id="FRONTEND::tuner_allocation::tuner_type" name="tuner_type" type="string">
      <description>Example Tuner Types: TX, RX, CHANNELIZER, DDC, RX_DIGITIZER, RX_DIGTIZIER_CHANNELIZER</description>
      <value></value>
    </simple>
    <simple id="FRONTEND::tuner_allocation::allocation_id" name="allocation_id" type="string">
      <description>The allocation_id set by the caller. Used by the caller to reference the device uniquely</description>
      <value></value>
    </simple>
    <simple id="FRONTEND::tuner_allocation::center_frequency" name="center_frequency" type="double">
      <description>Requested center frequency.</description>
      <value>0.0</value>
      <units>Hz</units>
    </simple>
    <simple id="FRONTEND::tuner_allocation::bandwidth" name="bandwidth" type="double">
      <description>Requested Bandwidth</description>
      <value>0.0</value>
      <units>Hz</units>
    </simple>
    <simple id="FRONTEND::tuner_allocation::bandwidth_tolerance" name="bandwidth_tolerance" type="double">
      <description>Allowable Percent above requested bandwidth  (ie - 100 would be up to twice)</description>
      <value>10.0</value>
      <units>percent</units>
    </simple>
    <simple id="FRONTEND::tuner_allocation::sample_rate" name="sample_rate" type="double">
      <description>Requested sample rate. This can be ignored for such devices as analog tuners</description>
      <value>0.0</value>
      <units>Sps</units>
    </simple>
    <simple id="FRONTEND::tuner_allocation::sample_rate_tolerance" name="sample_rate_tolerance" type="double">
      <description>Allowable Percent above requested sample rate (ie - 100 would be up to twice)</description>
      <value>10.0</value>
      <units>percent</units>
    </simple>
    <simple id="FRONTEND::tuner_allocation::device_control" name="device_control" type="boolean">
      <description>True: Has control over the device to make changes
False: Does not need control and can just attach to any currently tasked device that satisfies the parameters (essentually a listener)</description>
      <value>true</value>
    </simple>
    <simple id="FRONTEND::tuner_allocation::group_id" name="group_id" type="string">
      <description>Unique identifier that specifies a group of device. Must match group_id on the device</description>
      <value></value>
    </simple>
    <simple id="FRONTEND::tuner_allocation::rf_flow_id" name="rf_flow_id" type="string">
      <description>Optional. Specifies a certain RF flow to allocate against. If left empty, it will match all frontend devices.</description>
      <value></value>
    </simple>
    <configurationkind kindtype="allocation"/>
  </struct>
  <structsequence id="FRONTEND::tuner_status" mode="readonly" name="frontend_tuner_status">
    <description>Status of each tuner, including entries for both allocated and un-allocated tuners. Each entry represents a single tuner.</description>
    <struct id="FRONTEND::tuner_status_struct" name="frontend_tuner_status_struct">
      <simple id="FRONTEND::tuner_status::allocation_id_csv" name="allocation_id_csv" type="string">
        <description>Comma separated list of current Allocation IDs.</description>
      </simple>
      <simple id="FRONTEND::tuner_status::available_bandwidth" name="available_bandwidth" type="string">
        <description>Available bandwidth (Hz) in range (XX-YY) or csv (X,Y,Z) format. Do not put units in field.</description>
        <units>Hz</units>
      </simple>
      <simple id="FRONTEND::tuner_status::available_frequency" name="available_frequency" type="string">
        <description>Available frequencies (Hz) in range (XX-YY) or csv (X,Y,Z) format. Do not put units in field.</description>
        <units>Hz</units>
      </simple>
      <simple id="FRONTEND::tuner_status::available_sample_rate" name="available_sample_rate" type="string">
        <description>Available sample_rate (sps) in range (XX-YY) or csv (X,Y,Z) format. Do not put units in field.</description>
        <units>sps</units>
      </simple>
      <simple id="FRONTEND::tuner_status::bandwidth" name="bandwidth" type="double">
        <description>Current bandwidth in Hz</description>
        <units>Hz</units>
      </simple>
      <simple id="FRONTEND::tuner_status::center_frequency" name="center_frequency" type="double">
        <description>Current center frequency in Hz.</description>
        <units>Hz</units>
      </simple>
      <simple id="FRONTEND::tuner_status::enabled" name="enabled" type="boolean">
        <description>Indicates if tuner is enabled, in reference to the output state of the tuner.</description>
      </simple>
      <simple id="FRONTEND::tuner_status::gain" name="gain" type="double">
        <description>Current gain in dB.</description>
        <units>dB</units>
      </simple>
      <simple id="FRONTEND::tuner_status::group_id" name="group_id" type="string">
        <description>Unique ID that specifies a group of Device.</description>
      </simple>
      <simple id="FRONTEND::tuner_status::rf_flow_id" name="rf_flow_id" type="string">
        <description>Specifies a certain RF flow to allocate against.</description>
      </simple>
      <simple id="FRONTEND::tuner_status::sample_rate" name="sample_rate" type="double">
        <description>Current sample rate in samples per second.</description>
        <units>sps</units>
      </simple>
      <simple id="FRONTEND::tuner_status::stream_id" name="stream_id" type="string">
        <description>Stream ID associated with tuner/allocation</description>
      </simple>
      <simple id="FRONTEND::tuner_status::tuner_type" name="tuner_type" type="string">
        <description>Example Tuner Types: TX, RX, CHANNELIZER, DDC, RX_DIGITIZER, RX_DIGTIZIER_CHANNELIZER</description>
      </simple>
    </struct>
    <configurationkind kindtype="property"/>
  </structsequence>
  <structsequence id="connectionTable" mode="readonly">
    <struct id="connectionTable::connection_descriptor" name="connection_descriptor">
      <simple id="connectionTable::connection_id" name="connection_id" type="string"/>
      <simple id="connectionTable::stream_id" name="stream_id" type="string"/>
      <simple id="connectionTable::port_name" name="port_name" type="string"/>
    </struct>
    <configurationkind kindtype="property"/>
  </structsequence>
  <struct id="target_device" mode="readwrite" name="target_device">
    <description>Information used to specify a particular USRP device to target. All fields are optional. First device found that meets the specified criteria is selected.</description>
    <simple id="target::type" name="type" type="string">
      <value></value>
    </simple>
    <simple id="target::ip_address" name="ip_address" type="string">
      <description>IP address of the USRP for network connected devices.</description>
      <value></value>
    </simple>
    <simple id="target::name" name="name" type="string">
      <description>Name of the USRP device</description>
      <value></value>
    </simple>
    <simple id="target::serial" name="serial" type="string">
      <description>Serial number of the USRP device</description>
      <value></value>
    </simple>
    <configurationkind kindtype="property"/>
  </struct>
  <simple id="desiredRxChannels" mode="readwrite" type="octet">
    <description>The desired number of RX channels for the device.</description>
    <value>1</value>
    <kind kindtype="property"/>
    <action type="external"/>
  </simple>
  <simple id="desiredTxChannels" mode="readwrite" type="octet">
    <description>The desired number of TX channels for the device.</description>
    <value>1</value>
    <kind kindtype="property"/>
    <action type="external"/>
  </simple>
</properties>